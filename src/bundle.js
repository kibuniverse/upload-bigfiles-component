/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst getFileChunkHash_1 = __webpack_require__(/*! ./utils/getFileChunkHash */ \"./utils/getFileChunkHash.ts\");\r\nconst createHash_1 = __webpack_require__(/*! ./utils/createHash */ \"./utils/createHash.ts\");\r\nconst uploadFile_1 = __webpack_require__(/*! ./utils/uploadFile */ \"./utils/uploadFile.ts\");\r\nconst request_1 = __webpack_require__(/*! ./utils/request */ \"./utils/request.ts\");\r\nconst Apiurl_1 = __webpack_require__(/*! ./utils/Apiurl */ \"./utils/Apiurl.ts\");\r\nconst getExtendName_1 = __webpack_require__(/*! ./utils/getExtendName */ \"./utils/getExtendName.ts\");\r\nconst getUploadingFileIndexById_1 = __webpack_require__(/*! ./utils/getUploadingFileIndexById */ \"./utils/getUploadingFileIndexById.ts\");\r\nconst calculateUploadProcess_1 = __webpack_require__(/*! ./utils/calculateUploadProcess */ \"./utils/calculateUploadProcess.ts\");\r\nclass DisposeAllData {\r\n    constructor(props) {\r\n        this.waitCalculateFiles = [];\r\n        this.waitUploadFiles = [];\r\n        this.uploadedFiles = [];\r\n        this.isCalculating = false;\r\n        // 切片大小默认4M\r\n        this.chunkSize = props.chunkSize ? props.chunkSize : 4 * 1024 * 1024;\r\n        this.concurrency = props.concurrency ? props.concurrency : 3;\r\n        this.updateWaitCalculateFile = props.updateWaitCalculateFile;\r\n        this.updateWaitUploadFile = props.updateWaitUploadFile;\r\n        this.updateUploadedFiles = props.updateUploadedFiles;\r\n        this.chunksConcurrenceUploadNum = parseInt(String(10 / this.waitUploadFiles.length));\r\n    }\r\n    /**\r\n     * @function 对外暴露的添加文件方法\r\n     * @param newFiles 新添加的文件数组\r\n     */\r\n    addNewFiles(newFiles) {\r\n        for (let i = 0, len = newFiles.length; i < len; i++) {\r\n            this.waitCalculateFiles.push({\r\n                id: `${newFiles[i].name}_${new Date().getTime()}`,\r\n                file: newFiles[i],\r\n            });\r\n        }\r\n        this.updateWaitCalculateFile(this.waitCalculateFiles);\r\n        this.calculateFilesMessage();\r\n    }\r\n    /**\r\n     * @function 获取文件切片以及hash\r\n     */\r\n    async calculateFilesMessage() {\r\n        console.log(this.waitCalculateFiles.length);\r\n        while (this.waitCalculateFiles.length > 0) {\r\n            let file = this.waitCalculateFiles[0].file;\r\n            let waituploadFile = {\r\n                id: `${file.name}_${new Date().getTime()}`,\r\n                file: file,\r\n                chunkList: getFileChunkHash_1.default(file, this.chunkSize),\r\n                uploadProcess: 0,\r\n                uploadPercentArr: new Array(),\r\n                uploadedSize: 0,\r\n            };\r\n            let hash = await createHash_1.calculatehash(waituploadFile.chunkList);\r\n            console.log(hash);\r\n            // hash计算完成，更新待计算文件数组\r\n            this.waitCalculateFiles.shift();\r\n            waituploadFile.chunkList.forEach((item, index) => {\r\n                item.hash = `${hash}_${index}`;\r\n                item.index = index;\r\n                item.fileName = hash;\r\n            });\r\n            // 初始化上传进度数组\r\n            waituploadFile.uploadPercentArr = new Array(waituploadFile.chunkList.length);\r\n            console.log(waituploadFile);\r\n            waituploadFile.hash = hash;\r\n            // 更新计算完成文件数组\r\n            this.addCalculatedFile(waituploadFile);\r\n            // 上报新的待计算文件数组\r\n            this.updateWaitCalculateFile(this.waitCalculateFiles);\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @function 添加已上传文件并上报\r\n     * @param fileName 上传成功的文件名\r\n     * @param url 返回的url\r\n     *\r\n     */\r\n    addUploadedFiles(fileName, url) {\r\n        this.uploadedFiles.push({\r\n            fileName: fileName,\r\n            url: url\r\n        });\r\n        this.updateUploadedFiles(this.uploadedFiles);\r\n    }\r\n    /**\r\n     * @function 增加计算完成文件并上报 调用上传方法\r\n     * @param newWaitUploadFile 计算hash完成的文件\r\n     */\r\n    async addCalculatedFile(newWaitUploadFile) {\r\n        this.waitUploadFiles.push(newWaitUploadFile);\r\n        this.updateWaitUploadFile(this.waitUploadFiles);\r\n        // 上传文件\r\n        this.upload(newWaitUploadFile);\r\n    }\r\n    /**\r\n     * @function 执行验证以及上传逻辑\r\n     * @param waitUploadFile 待上传文件\r\n     */\r\n    async upload(waitUploadFile) {\r\n        let verifyData = await this.verifyRequest(waitUploadFile.file.name, waitUploadFile.hash);\r\n        verifyData = JSON.parse(verifyData.data);\r\n        console.log(verifyData);\r\n        // 文件已经上传完成\r\n        if (verifyData.status === 1) {\r\n            this.completeFileUpload(waitUploadFile.id, waitUploadFile.file.name, verifyData.url);\r\n            return;\r\n        }\r\n        // 处理断点续传逻辑\r\n        if (verifyData.AlreadyUploadList) {\r\n            let loaded = this.calculeateAlreadyUploadSize(verifyData.AlreadyUploadList, waitUploadFile);\r\n            let index = getUploadingFileIndexById_1.default(waitUploadFile.id, this.waitUploadFiles);\r\n            if (index === -1) {\r\n                return;\r\n            }\r\n            this.waitUploadFiles[index].uploadedSize = loaded;\r\n            // 过滤已上传切片\r\n            this.waitUploadFiles[index].chunkList = this.waitUploadFiles[index].chunkList.filter((item) => (verifyData.AlreadyUploadList.indexOf(item.hash) === -1));\r\n        }\r\n        uploadFile_1.default(waitUploadFile, this.concurrency, this.updateUploadFilePercent.bind(this)).then(async (res) => {\r\n            let uploadedMessage = await this.mergeRequest(waitUploadFile);\r\n            uploadedMessage = JSON.parse(uploadedMessage.data);\r\n            this.completeFileUpload(waitUploadFile.id, waitUploadFile.file.name, uploadedMessage.url);\r\n        });\r\n    }\r\n    /**\r\n     * @function 计算已上传的size\r\n     * @param AlreadyUploadList 服务端返回的已上传hash列表\r\n     * @param waitUploadFile 待上传文件\r\n     */\r\n    calculeateAlreadyUploadSize(AlreadyUploadList, waitUploadFile) {\r\n        let loaded = 0;\r\n        for (let i = 0, len = AlreadyUploadList.length; i < len; i++) {\r\n            let index = AlreadyUploadList[i].slice(-1);\r\n            loaded += waitUploadFile.chunkList[index].file.size;\r\n        }\r\n        return loaded;\r\n    }\r\n    /**\r\n     * @function 处理上传完成后的逻辑，上报更新UI\r\n     * @param id 文件的id\r\n     * @param fileName 文件名\r\n     * @param url 得到的url\r\n     */\r\n    completeFileUpload(id, fileName, url) {\r\n        let index = getUploadingFileIndexById_1.default(id, this.waitUploadFiles);\r\n        this.waitUploadFiles.splice(index, index + 1);\r\n        this.updateWaitUploadFile(this.waitUploadFiles);\r\n        this.addUploadedFiles(fileName, url);\r\n    }\r\n    verifyRequest(fileName, filehash) {\r\n        return request_1.default({\r\n            method: 'post',\r\n            url: Apiurl_1.default.verify,\r\n            headers: {\r\n                'content-type': 'application/json'\r\n            },\r\n            data: JSON.stringify({\r\n                fileName: fileName,\r\n                fileHash: filehash\r\n            }),\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * @param id 待更改的文件id\r\n     * @param e onprogress返回值\r\n     * @param index 切片的下标\r\n     * @function 更新上传进度\r\n     */\r\n    updateUploadFilePercent(id, e, index) {\r\n        let fileIndex = getUploadingFileIndexById_1.default(id, this.waitUploadFiles);\r\n        if (fileIndex === -1) {\r\n            return;\r\n        }\r\n        this.waitUploadFiles[fileIndex].uploadPercentArr[index] = e.loaded;\r\n        this.waitUploadFiles[fileIndex].uploadProcess = calculateUploadProcess_1.default(this.waitUploadFiles[fileIndex].uploadedSize, this.waitUploadFiles[fileIndex]);\r\n        this.updateWaitUploadFile(this.waitUploadFiles);\r\n    }\r\n    /**\r\n     *\r\n     * @param uploadFile 计算完成的文件\r\n     * @function 发送文件合并请求\r\n     */\r\n    mergeRequest(uploadFile) {\r\n        return request_1.default({\r\n            method: 'post',\r\n            url: Apiurl_1.default.mergeRequest,\r\n            headers: {\r\n                \"content-type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                fileName: uploadFile.hash,\r\n                newname: `${uploadFile.hash}.${getExtendName_1.default(uploadFile.file.name)}`,\r\n                size: uploadFile.file.size,\r\n                chunkSize: this.chunkSize\r\n            })\r\n        });\r\n    }\r\n}\r\nexports.default = DisposeAllData;\r\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./index.js?");

/***/ }),

/***/ "./node_modules/spark-md5/spark-md5.js":
/*!*********************************************!*\
  !*** ./node_modules/spark-md5/spark-md5.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (factory) {\n    if (true) {\n        // Node/CommonJS\n        module.exports = factory();\n    } else { var glob; }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n//# sourceURL=webpack:///./node_modules/spark-md5/spark-md5.js?");

/***/ }),

/***/ "./utils/Apiurl.ts":
/*!*************************!*\
  !*** ./utils/Apiurl.ts ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nlet ipUrl = 'http://49.234.79.241:8001/';\r\nlet servicePath = {\r\n    sendChunkRequest: ipUrl + 'file_upload',\r\n    mergeRequest: ipUrl + 'mergeReq',\r\n    verify: ipUrl + 'verify'\r\n};\r\nexports.default = servicePath;\r\n\n\n//# sourceURL=webpack:///./utils/Apiurl.ts?");

/***/ }),

/***/ "./utils/calculateUploadProcess.ts":
/*!*****************************************!*\
  !*** ./utils/calculateUploadProcess.ts ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction calculateUploadProcess(uploadedSize, waitUploadFile) {\r\n    let loaded = uploadedSize;\r\n    waitUploadFile.uploadPercentArr.forEach((item) => {\r\n        loaded += item;\r\n    });\r\n    return loaded / waitUploadFile.file.size;\r\n}\r\nexports.default = calculateUploadProcess;\r\n\n\n//# sourceURL=webpack:///./utils/calculateUploadProcess.ts?");

/***/ }),

/***/ "./utils/createHash.ts":
/*!*****************************!*\
  !*** ./utils/createHash.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.calculatehash = exports.createChunkList = void 0;\r\nconst SparkMD5 = __webpack_require__(/*! spark-md5 */ \"./node_modules/spark-md5/spark-md5.js\");\r\nconst createChunkList = async (files, chunkSize) => {\r\n    let fileChunkList = [];\r\n    let cur = 0;\r\n    let index = 1;\r\n    while (cur < files.size) {\r\n        fileChunkList.push({\r\n            file: files.slice(cur, cur + chunkSize),\r\n            hash: `${files.name}_${index}`,\r\n            fileName: files.name,\r\n        });\r\n        index++;\r\n        cur += chunkSize;\r\n    }\r\n    return fileChunkList;\r\n};\r\nexports.createChunkList = createChunkList;\r\nconst calculatehash = (fileChunkList) => (new Promise(reslove => {\r\n    const spark = new SparkMD5.ArrayBuffer();\r\n    let count = 0;\r\n    const loadNext = (index) => {\r\n        const reader = new FileReader();\r\n        reader.readAsArrayBuffer(fileChunkList[index].file);\r\n        reader.onload = (e) => {\r\n            count++;\r\n            spark.append(e.target.result);\r\n            // 如果文件处理完成则发送发送请求\r\n            if (count === fileChunkList.length) {\r\n                reslove(spark.end());\r\n                return;\r\n            }\r\n            loadNext(count);\r\n        };\r\n    };\r\n    loadNext(0);\r\n}));\r\nexports.calculatehash = calculatehash;\r\n\n\n//# sourceURL=webpack:///./utils/createHash.ts?");

/***/ }),

/***/ "./utils/getExtendName.ts":
/*!********************************!*\
  !*** ./utils/getExtendName.ts ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getExtendName(nameStr) {\r\n    return nameStr.split('.')[nameStr.split('.').length - 1];\r\n}\r\nexports.default = getExtendName;\r\n\n\n//# sourceURL=webpack:///./utils/getExtendName.ts?");

/***/ }),

/***/ "./utils/getFileChunkHash.ts":
/*!***********************************!*\
  !*** ./utils/getFileChunkHash.ts ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getFileChunkHash(file, chunkSize) {\r\n    let fileChunkList = [];\r\n    let cur = 0;\r\n    let index = 1;\r\n    while (cur < file.size) {\r\n        fileChunkList.push({\r\n            file: file.slice(cur, cur + chunkSize),\r\n            hash: `${file.name}_${index}`,\r\n            fileName: file.name,\r\n        });\r\n        index++;\r\n        cur += chunkSize;\r\n    }\r\n    return fileChunkList;\r\n}\r\nexports.default = getFileChunkHash;\r\n\n\n//# sourceURL=webpack:///./utils/getFileChunkHash.ts?");

/***/ }),

/***/ "./utils/getUploadingFileIndexById.ts":
/*!********************************************!*\
  !*** ./utils/getUploadingFileIndexById.ts ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction getUploadingFileById(id, arr) {\r\n    for (let i = 0, len = arr.length; i < len; i++) {\r\n        if (arr[i].id === id) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexports.default = getUploadingFileById;\r\n\n\n//# sourceURL=webpack:///./utils/getUploadingFileIndexById.ts?");

/***/ }),

/***/ "./utils/request.ts":
/*!**************************!*\
  !*** ./utils/request.ts ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction requset(paramsObj) {\r\n    const url = paramsObj.url;\r\n    const data = paramsObj.data || null;\r\n    const method = paramsObj.method || 'post';\r\n    const headers = paramsObj.headers || {};\r\n    return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        Object.keys(headers).forEach(key => {\r\n            xhr.setRequestHeader(key, headers[key]);\r\n        });\r\n        xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4) {\r\n                if ((xhr.status >= 200 && xhr.status <= 300) || xhr.status === 304) {\r\n                    resolve({\r\n                        data: xhr.responseText\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        xhr.send(data);\r\n    });\r\n}\r\nexports.default = requset;\r\n\n\n//# sourceURL=webpack:///./utils/request.ts?");

/***/ }),

/***/ "./utils/uploadFile.ts":
/*!*****************************!*\
  !*** ./utils/uploadFile.ts ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Apiurl_1 = __webpack_require__(/*! ./Apiurl */ \"./utils/Apiurl.ts\");\r\n/**\r\n * @param file 待上传文件\r\n * @param concurrency 并发上传最大数\r\n * @param callback 回调函数，上报修改上传进度\r\n * @function 上传文件\r\n */\r\nasync function UploadFile(file, concurrency, updatePercent) {\r\n    return new Promise((reslove, reject) => {\r\n        let chunkList = file.chunkList;\r\n        let len = chunkList.length;\r\n        let counter = 0;\r\n        let isStop = false;\r\n        const start = async () => {\r\n            if (isStop) {\r\n                return;\r\n            }\r\n            const item = chunkList.shift();\r\n            if (item) {\r\n                const formdata = new FormData();\r\n                formdata.append('fileData', item.file);\r\n                formdata.append('fileName', item.fileName);\r\n                formdata.append('hash', item.hash);\r\n                const xhr = new XMLHttpRequest();\r\n                const index = item.index;\r\n                xhr.onerror = function error(e) {\r\n                    isStop = true;\r\n                    reject(e);\r\n                };\r\n                // 分片上传完后的回调\r\n                xhr.onload = () => {\r\n                    if (xhr.status < 200 || xhr.status >= 300) {\r\n                        isStop = true;\r\n                        reject('服务端返回状态码错误');\r\n                    }\r\n                    // 最后一个切片已经上传完成\r\n                    if (counter === len - 1) {\r\n                        reslove();\r\n                    }\r\n                    else {\r\n                        counter++;\r\n                        // 递归调用\r\n                        start();\r\n                    }\r\n                };\r\n                // 上报分片上传进度\r\n                if (xhr.upload) {\r\n                    xhr.upload.onprogress = (e) => {\r\n                        if (e.total > 0) {\r\n                            e.percent = e.loaded / e.total * 100;\r\n                        }\r\n                        updatePercent(file.id, e, index);\r\n                    };\r\n                }\r\n                xhr.open('post', Apiurl_1.default.sendChunkRequest, true);\r\n                xhr.send(formdata);\r\n            }\r\n        };\r\n        while (concurrency > 0) {\r\n            setTimeout(() => {\r\n                start();\r\n            }, Math.random() * 100);\r\n            concurrency--;\r\n        }\r\n    });\r\n}\r\nexports.default = UploadFile;\r\n\n\n//# sourceURL=webpack:///./utils/uploadFile.ts?");

/***/ })

/******/ });